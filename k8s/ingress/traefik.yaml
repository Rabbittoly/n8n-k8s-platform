# Traefik IngressRoute for n8n
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: n8n
  namespace: n8n
  annotations:
    kubernetes.io/ingress.class: traefik
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`n8n.example.com`)
      kind: Rule
      services:
        - name: n8n
          port: 5678
      middlewares:
        - name: n8n-headers
  tls:
    secretName: n8n-tls
---
# HTTP to HTTPS redirect
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: n8n-redirect
  namespace: n8n
spec:
  entryPoints:
    - web
  routes:
    - match: Host(`n8n.example.com`)
      kind: Rule
      middlewares:
        - name: redirect-to-https
      services:
        - name: n8n
          port: 5678
---
# Middlewares
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: redirect-to-https
  namespace: n8n
spec:
  redirectScheme:
    scheme: https
    permanent: true
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: n8n-headers
  namespace: n8n
spec:
  headers:
    frameDeny: true
    browserXssFilter: true
    contentTypeNosniff: true
    stsIncludeSubdomains: true
    stsPreload: true
    stsSeconds: 31536000
    customRequestHeaders:
      X-Forwarded-Proto: "https"
    customResponseHeaders:
      X-Content-Type-Options: "nosniff"
      X-Frame-Options: "DENY"
      X-XSS-Protection: "1; mode=block"
      Referrer-Policy: "no-referrer-when-downgrade"
      Strict-Transport-Security: "max-age=31536000; includeSubDomains; preload"
      Content-Security-Policy: "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' wss:; frame-src 'self'"
---
# TLS Certificate for n8n
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: n8n-tls
  namespace: n8n
spec:
  secretName: n8n-tls
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer
  dnsNames:
    - n8n.example.com