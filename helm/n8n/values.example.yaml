# n8n Helm Chart values.example.yaml
# Example configuration for n8n deployment
# IMPORTANT: Copy this file to values.yaml and customize it before deployment

# n8n Configuration
n8n:
  name: n8n
  replicaCount: 2  # For high availability
  
  # n8n image configuration
  image:
    repository: n8nio/n8n
    tag: "1.0.0"  # Always use a specific version in production
    pullPolicy: IfNotPresent
    
  # Security context settings
  securityContext:
    runAsUser: 1000
    runAsGroup: 1000
    fsGroup: 1000
    
  # Resource limits
  resources:
    limits:
      cpu: 1
      memory: 2Gi
    requests:
      cpu: 500m
      memory: 1Gi
  
  # Storage for n8n data
  persistence:
    enabled: true
    storageClass: ""  # Use default storageClass
    accessMode: ReadWriteOnce
    size: 10Gi
  
  # Service configuration
  service:
    type: ClusterIP
    port: 5678
  
  # Environment variables
  env:
    # Essential variables
    - name: N8N_ENCRYPTION_KEY
      valueFrom:
        secretKeyRef:
          name: n8n-secrets
          key: encryptionKey
    - name: WEBHOOK_URL
      valueFrom:
        secretKeyRef:
          name: n8n-secrets
          key: webhookUrl
    - name: N8N_HOST
      value: "n8n.example.com"  # CHANGE THIS: Set to your domain
    - name: N8N_PORT
      value: "5678"
    
    # Database configuration
    - name: DB_TYPE
      value: "postgresdb"
    - name: DB_POSTGRESDB_HOST
      value: "postgresql"
    - name: DB_POSTGRESDB_PORT
      value: "5432"
    - name: DB_POSTGRESDB_DATABASE
      value: "n8n"
    - name: DB_POSTGRESDB_USER
      valueFrom:
        secretKeyRef:
          name: postgresql
          key: username
    - name: DB_POSTGRESDB_PASSWORD
      valueFrom:
        secretKeyRef:
          name: postgresql
          key: password
    
    # Redis configuration
    - name: N8N_REDIS_HOST
      value: "redis-master"
    - name: N8N_REDIS_PORT
      value: "6379"
    - name: N8N_REDIS_PASSWORD
      valueFrom:
        secretKeyRef:
          name: redis
          key: redis-password
    
    # Queue mode (important for scaling)
    - name: EXECUTIONS_MODE
      value: "queue"
    
    # Webhook settings
    - name: N8N_PROTOCOL
      value: "https"
    - name: NODE_ENV
      value: "production"
    
    # Metrics
    - name: N8N_METRICS
      value: "true"
    
    # Timezone
    - name: GENERIC_TIMEZONE
      value: "UTC"  # CHANGE THIS: Set to your timezone
    
    # Security settings
    - name: N8N_USER_MANAGEMENT_DISABLED
      value: "false"
    - name: N8N_DIAGNOSTICS_ENABLED
      value: "false"
    
    # Better queue performance
    - name: EXECUTIONS_PROCESS
      value: "main"
    - name: EXECUTIONS_TIMEOUT
      value: "3600"
    - name: EXECUTIONS_TIMEOUT_MAX
      value: "7200"
    - name: TRIGGER_TIMEOUT_MAX
      value: "7200"
    
    # Email settings (uncomment and configure if needed)
    # - name: N8N_EMAIL_MODE
    #   value: "smtp"
    # - name: N8N_SMTP_HOST
    #   value: "smtp.example.com"
    # - name: N8N_SMTP_PORT
    #   value: "587"
    # - name: N8N_SMTP_USER
    #   valueFrom:
    #     secretKeyRef:
    #       name: n8n-secrets
    #       key: smtpUser
    # - name: N8N_SMTP_PASS
    #   valueFrom:
    #     secretKeyRef:
    #       name: n8n-secrets
    #       key: smtpPass
    # - name: N8N_SMTP_SENDER
    #   value: "n8n@example.com"
  
  # Health checks
  livenessProbe:
    httpGet:
      path: /healthz
      port: 5678
    initialDelaySeconds: 60
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
  
  readinessProbe:
    httpGet:
      path: /healthz
      port: 5678
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
  
  # Pod disruption budget for high availability
  podDisruptionBudget:
    enabled: true
    minAvailable: 1

# Ingress configuration (not used, we use Traefik IngressRoute instead)
ingress:
  enabled: false
  annotations:
    kubernetes.io/ingress.class: "traefik"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
  hosts:
    - host: n8n.example.com  # CHANGE THIS: Set to your domain
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: n8n-tls
      hosts:
        - n8n.example.com  # CHANGE THIS: Set to your domain

# Auto scaling configuration
autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# Affinity settings for pod distribution
affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: app.kubernetes.io/name
            operator: In
            values:
            - n8n
        topologyKey: kubernetes.io/hostname

# Prometheus Metrics
metrics:
  enabled: true
  serviceMonitor:
    enabled: true
    additionalLabels:
      release: prometheus

# Network policies
networkPolicy:
  enabled: true
  ingressRules:
    - from:
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: traefik
  egressRules:
    - to:
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: postgresql
    - to:
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: redis